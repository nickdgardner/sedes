#!/usr/bin/env python3

import csv
import getopt
import re
import subprocess
import sys

def usage(f=sys.stdout):
    f.write("""\
Usage: %s [<LINENO><WORD>.html]...
""")

WORKS = (
    "Il.",
    "Od.",
    "Hymns",
    "Theog.",
    "WD",
    "Shield",
    "Fr.",
    "Ap.Rh.",
    "Theoc.",
    "Call.",
    "Aratus",
)

csv_writer = csv.DictWriter(sys.stdout, fieldnames=(
    "Line #",
    "Word",
    "TLG search",
    "Sedes",
    "Total (Diogenes)",
    "Il.",
    "Od.",
    "Hymns",
    "Theog.",
    "WD",
    "Shield",
    "Fr.",
    "Ap.Rh.",
    "Theoc.",
    "Call.",
    "Aratus",
    "Notes",
))

def metricalposition(filename):
    p = subprocess.Popen(["./metricalposition", filename], stdout=subprocess.PIPE)
    return p.stdout

# pos==None means any pos.
def freqbywork(filename, pos):
    counts = {}
    for work in WORKS:
        counts.setdefault(work, 0)
    for line in metricalposition(filename):
        work, lineno, positions, _, _ = line.decode("utf-8").strip().split("\t")
        positions = set(positions.split("/"))
        if pos is None or pos in positions:
            counts[work] += 1
    return counts

def process(filename):
    m = re.match(r'^(\d+)(.+)\.html$', filename)
    line_num = int(m.group(1))
    word = m.group(2)
    row = {
        "Line #": line_num,
        "Word": word,
    }

    freqs = freqbywork(filename, "7.5")
    for work, count in freqs.items():
        row[work] = count

    csv_writer.writerow(row)

opts, filenames = getopt.gnu_getopt(sys.argv[1:], "-h", ["help"])
for o, a in opts:
    if o == "-h" or o == "--help":
        usage()
        sys.exit()

csv_writer.writeheader()

for filename in filenames:
    process(filename)
